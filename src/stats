#!/bin/bash

STATSFILE=$1

:>| "$STATSFILE.tmp"
:>| "$STATSFILE.rapl"

cleanup() {
    kill $stream_pid &> /dev/null
    wait $stream_pid
    sed '$d' "$STATSFILE.tmp" | jq  -s . > "$STATSFILE.json" && rm -f "$STATSFILE.tmp"
}
trap cleanup EXIT

curl -sS --unix-socket /var/run/docker.sock "http:/v1.26/containers/$SERVER_ID/stats?stream=1" > "$STATSFILE.tmp" &
stream_pid=$!

# TODO: collect stress-ng stats
# curl -sS --unix-socket /var/run/docker.sock "http:/v1.26/containers/$STRESS_ID/stats?stream=1" > "$STATSFILE.tmp" &
# stream_stress_pid=$!

while true; do
    # RAPL timestamp (or any other stats we gather here in the future)
    # NOT accurate for docker stats API (use "read" in the response)
    timestamp=$(date -u --rfc-3339=ns)

    # Assuming package 0 corresponds to node 0
    energy=$(/workspace/bin/rapl -s | grep package-0 | awk '{print $3}')

    echo "$timestamp, $energy" >> "$STATSFILE.rapl"

    # echo "0" > "/sys/class/powercap/intel-rapl:0/energy_uj"
done

